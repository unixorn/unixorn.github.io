<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Arm7 on unixorn.github.io</title>
    <link>https://unixorn.github.io/tags/arm7/</link>
    <description>Recent content in Arm7 on unixorn.github.io</description>
    <image>
      <title>unixorn.github.io</title>
      <url>https://unixorn.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://unixorn.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2019-2023, Joe Block. All rights reserved.</copyright>
    <lastBuildDate>Sat, 13 Jun 2020 09:07:49 -0600</lastBuildDate>
    <atom:link href="https://unixorn.github.io/tags/arm7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Multi Architecture Docker Images with buildx</title>
      <link>https://unixorn.github.io/post/multi-architecture-images/</link>
      <pubDate>Sat, 13 Jun 2020 09:07:49 -0600</pubDate>
      <guid>https://unixorn.github.io/post/multi-architecture-images/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve got a mix of architectures in my basement cluster - some Odroid HC2s that are &lt;code&gt;arm7&lt;/code&gt;, some Raspberry Pi 4s that are &lt;code&gt;arm64&lt;/code&gt;, and am soon going to add an Intel node as well. It&amp;rsquo;s more hassle than it&amp;rsquo;s worth to have to specify different images for the different architectures. I already build my own copies of images, so I decided to start building all my images as multiarchitecture images.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Backing Up the Cluster with Duplicacy</title>
      <link>https://unixorn.github.io/post/backing-up-the-cluster-with-duplicacy/</link>
      <pubDate>Sun, 01 Sep 2019 15:47:23 -0600</pubDate>
      <guid>https://unixorn.github.io/post/backing-up-the-cluster-with-duplicacy/</guid>
      <description>&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;I wanted to ensure any data I put into my &lt;a href=&#34;https://unixorn.github.io/post/k3s-on-arm/&#34;&gt;ARM k3s cluster&lt;/a&gt; is backed up to prevent data loss.&lt;/p&gt;
&lt;p&gt;I no longer recommend duplicacy. Instead, read my article on &lt;a href=&#34;https://unixorn.github.io/post/restic-backups-on-truenas/&#34;&gt;restic backups on TrueNas&lt;/a&gt; instead.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adding a Distributed Filesystem to the Cluster</title>
      <link>https://unixorn.github.io/post/adding-a-distributed-filesystem-to-cluster/</link>
      <pubDate>Sun, 23 Jun 2019 17:22:47 -0700</pubDate>
      <guid>https://unixorn.github.io/post/adding-a-distributed-filesystem-to-cluster/</guid>
      <description>&lt;p&gt;One of the reasons I set up my cluster was that I&amp;rsquo;m running out of space on my NAS. I don&amp;rsquo;t want to buy a whole new chassis, and while I could have put individual file shares on each cluster node, that would be both inconvenient and not provide any data redundancy without a lot of brittle home-rolled hacks to &lt;code&gt;rsync&lt;/code&gt; data from node to node. And since distributed file systems are a thing, I&amp;rsquo;d rather not resort to hacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parts list for the ARM cluster</title>
      <link>https://unixorn.github.io/post/arm_cluster_parts_list/</link>
      <pubDate>Fri, 01 Mar 2019 21:49:17 -0700</pubDate>
      <guid>https://unixorn.github.io/post/arm_cluster_parts_list/</guid>
      <description>ARM cluster parts list</description>
    </item>
    <item>
      <title>Getting an ARM kubernetes cluster up and running</title>
      <link>https://unixorn.github.io/post/in_the_beginning_there_was_bare_metal/</link>
      <pubDate>Sun, 17 Feb 2019 16:00:05 -0700</pubDate>
      <guid>https://unixorn.github.io/post/in_the_beginning_there_was_bare_metal/</guid>
      <description>In the beginning, there was bare metal</description>
    </item>
  </channel>
</rss>
